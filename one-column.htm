<!doctype html>
<html>
<head>
    <meta charset="utf-8"/>
    <title>Kolom - One-Column Layout Demonstration</title>
    <link rel="stylesheet" href="kolom.css"/>
</head>
<body class="layout one-column">
    <div id="header" class="row">
        <div class="column">
            <h1>Kolom One-Column Layout Demonstration</h1>
        </div>
    </div>
    <ul id="top-nav" class="row">
        <li><a href="#">Home</a></li>
        <li><a href="#">About</a></li>
        <li><a href="#">Blog</a></li>
        <li><a href="#">Projects</a></li>
        <li><a href="#">Contact</a></li>
    </ul>
    <div id="introduction" class="row">
        <div class="column">
            <h2>Introduction</h2>
            <p>Welcome to the One-Column Layout Demonstration for Kolom. Before we get too far ahead, please take a moment to review the source code of this page so that you can see how we've used Kolom to create a minimal design centered around a single-column layout. There are a number of features of Kolom that were used to rapidly produce this page without too much effort on the part of the designer, and being familiar with the document itself will help you understand how to better use the conventions on this page in your own designs.</p>
        </div>
    </div>
    <div id="layouts" class="row">
        <div class="column">
            <h2>Layouts</h2>
            <p>First things first, we would like to bring your attention to the <em>layout</em> element (.layout). Layouts are our way of making sure all of the elements of a design stick together. Typically, there is a single layout per page, but by all means use more if your design requires it. In our demonstration, we've chosen to apply the layout element directly to the body tag, as we are only planning on using, and demonstrating, a single layout on this page. You can also use the layout element on divs or virtually any other container which you might use to organize content.</p>
            <p>The only requirement is that the layout should be the outermost wrapper, so that it will organize and display content appropriately on the page.</p>
        </div>
    </div>
    <div id="column-specifications" class="row">
        <div class="column">
            <h2>Column Specifications</h2>
            <p>Another interesting feature of Kolom is its support for several different column based layouts (up to 16 columns if you need it!). All the column specification does is tell Kolom how to draw other elements (columns, specifically) when it is rendered on the page. While most designs will utilize the same number of columns throughout their page, Kolom alows you to specify the column count any parent element (in Kolom, the parent elements are layouts and rows), providing a great deal of flexibility as a result.</p>
            <p>For our purposes, we specified the column count in the topmost parent so that we wouldn't have to fuss around with it more later.</p>
        </div>
    </div>
    <div id="rows-info" class="row">
        <div class="column">
            <h2>Rows</h2>
            <p>The vertical organizational unit in Kolom is the Row (.row). Rows stack neatly atop one another to allow your site to be organized from top to bottom. Headers and footers are both good examples of rows in Kolom. Since rows contain columns, they can also be used as sections within your design. In the case of this demonstration however, we have used rows as logical segments of visual elements.</p>
        </div>
    </div>
    <div id="columns-info" class="row">
        <div class="column">
            <h2>Columns</h2>
            <p>In addition to rows' ability to organize content from top to bottom, Kolom also has columns to organize content from left to right. Typically the number of columns in a row will match the number of columns you've specified in your layout, but if you specify more columns than fits from left to right, they will simply appear below one another (you will need to specify top and bottom margins to provide whitespace).</p>
            <h3>Spans</h3>
            <p>What you don't see here is a span. Spans literally allow a single column to span multiple columns in multi-column layouts, allowing for wider columns while preserving other properties of the column (whitespace in particular). Since this is a single-column layout, spans are not needed (all columns already take up the entire row).</p>
        </div>
    </div>
    <div id="typography" class="row">
        <div class="column">
            <h2>Typography</h2>
            <p>When creating Kolom, we wanted the tedium that typography can sometimes present taken out of our user workflows. In short, we've written a Typography spec that is pretty, that flows well between text sections, and looks good and similar across operating systems and browsers. Since we were targeting developers and users who typically only have a passing familiarity with HTML and CSS, we've tried to define typography for all of the practical use cases we could imagine.</p>
            <h3>Headings</h3>
            <p>Ultimately, the goals for headings were that they should scale smoothly and be easily discernible from paragraph text. To this end, headings are all bold, start slightly larger than paragraph text, display on their own line, and have slight top and bottom margins; all of this combines to create an effect where headings are part of the paragraphs they precede while still being connected to their "children".</p>
            <h1>Heading 1</h1>
            <h2>Heading 2</h2>
            <h3>Heading 3</h3>
            <h4>Heading 4</h4>
            <h5>Heading 5</h5>
            <h6>Heading 6</h6>
            <br />
            <h3>Blockquotes</h3>
            <p>For Kolom, we wanted blockquotes to be separated from the text that they are surrounded by. The result of our efforts were pretty passages of text that really stand out from larger passages of text.</p>
            <blockquote>This is a blockquote, typically used for highlighting a passage of text within a larger body of text either on the same page or from another source.</blockquote>
            <h3>Lists</h3>
            <p></p>
            <h4>Unordered Lists</h4>
            <ul>
                <li>List item 1</li>
                <li>List item 2</li>
                <li>List item 3</li>
                <li>List item 4</li>
            </ul>
            <h4>Ordered Lists</h4>
            <ol>
                <li>List item 1</li>
                <li>List item 2</li>
                <li>List item 3</li>
                <li>List item 4</li>
            </ol>
            <h4>Definition Lists</h4>
            <dl>
                <dt>Term 1</dt><dd>definition 1</dd>
                <dt>Term 2</dt><dd>definition 2</dd>
                <dt>Term 3</dt><dd>definition 3</dd>
                <dt>Term 4</dt><dd>definition 4</dd>
            </dl>
        </div>
    </div>
</body>
</html>